name: Cleanup

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - name: Delete old workflow runs
      uses: actions/github-script@v7
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // Get all workflow runs older than 30 days
          const thirtyDaysAgo = new Date();
          thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
          
          const runs = await github.rest.actions.listWorkflowRunsForRepo({
            owner,
            repo,
            per_page: 100,
            status: 'completed'
          });
          
          const oldRuns = runs.data.workflow_runs.filter(run => 
            new Date(run.created_at) < thirtyDaysAgo
          );
          
          console.log(`Found ${oldRuns.length} old workflow runs to delete`);
          
          for (const run of oldRuns) {
            try {
              await github.rest.actions.deleteWorkflowRun({
                owner,
                repo,
                run_id: run.id
              });
              console.log(`Deleted run ${run.id} from ${run.created_at}`);
            } catch (error) {
              console.log(`Failed to delete run ${run.id}: ${error.message}`);
            }
          }

  cleanup-artifacts:
    runs-on: ubuntu-latest
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // Get all artifacts
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner,
            repo,
            per_page: 100
          });
          
          const thirtyDaysAgo = new Date();
          thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
          
          const oldArtifacts = artifacts.data.artifacts.filter(artifact => 
            new Date(artifact.created_at) < thirtyDaysAgo
          );
          
          console.log(`Found ${oldArtifacts.length} old artifacts to delete`);
          
          for (const artifact of oldArtifacts) {
            try {
              await github.rest.actions.deleteArtifact({
                owner,
                repo,
                artifact_id: artifact.id
              });
              console.log(`Deleted artifact ${artifact.name} from ${artifact.created_at}`);
            } catch (error) {
              console.log(`Failed to delete artifact ${artifact.name}: ${error.message}`);
            }
          }
